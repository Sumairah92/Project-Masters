# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~Msle0~/\<pathBW\>

# Command Line History (newest to oldest):
:wq!
:q!
:209
:251
:250
:260
:160
:200
:235
:240
:152
:159
:145
:150
:149
:`149
:130
:140
:259
:190
:195
:196
:278
:222
:254
:100
:263
:256
:230
:236
:246
:129
:247
:237
:232
:90
:70
:50
:238
:0
:228
:215
:22
:217
:224
:221
:218
:213
:212
:214

# Search String History (newest to oldest):
? \<pathBW\>
? \<result\>
? \<print\>
?/link-0
?//link-0

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
""1	CHAR	0
	'''
		for s in switchHostsFlows:
			command = "curl -s http://%s/wm/core/switch/'%s'/flow/json" % (controllerIp,s['dpid'])
			result=os.popen(command).read()
	                parsedResult = json.loads(result)
			for flows in parsedResult['flows']:
	                        if (flows['priority'] =='3'):
	                                if ((flows['match']['ipv4_src'] == sourceIP) and (flows['match']['ipv4_dst'] == destIP)):
						return
	'
"2	CHAR	0
	for s in switchHostsFlows:
		command = "curl -s http://%s/wm/staticflowpusher/list/'%s'/json" % (controllerIp,s['dpid'])
	       	result=os.popen(command).read()
	        parsedResult = json.loads(result)
	        for flows in parsedResult[s['dpid']]:
			for f in flows:
				#print flows[f]['priority']
	        		if (flows[f]['priority'] =='3'):
	                		if ((flows[f]['match']['ipv4_src'] == sourceIP) and (flows[f]['match']['ipv4_dst'] == destIP)):
	 
"3	CHAR	0
	for i,f in enumerate(flows):
				print f[i]['outPort']
	
"4	CHAR	0
	'''
	#----------Query for stats at t1----------#
	
		for nodes in Network.nodes():
			if Network.node[nodes]['DPID'] is not None:
	        		for i,interface in enumerate(Network.node[nodes]['interfaces']):
	                		P =  Network.node[nodes]['interfaces'][i]['Port']
					L = Network.node[nodes]['interfaces'][i]['link']
					if (P <> 'local') and (L in interswitchLinks):
	                			command = "curl http://%s/wm/statistics/bandwidth/'%s'/'%s'/json" % (controllerIp, Network.node[nodes]['DPID'],P)
	                			result=os.popen(command).read()
	                			parsedResult = json.loads(result)
	                			for result in parsedResult:
							if (result['port'] == P):
								Bandwidth_t1[result['dpid']+result['port']] = 100000000-(int(result['bits-per-second-tx'])+int(result['bits-per-second-rx']))
	'''
	
"5	CHAR	0
	#calculate_bandwidth_for_paths('h3','h4')
	'''
	paths = list(nx.all_simple_paths(Network, source='h1', target='h2'))
	print len(paths)
	sourceip=Network.node['h2']['interfaces'][0]['IP']
	destip=Network.node['h3']['interfaces'][0]['IP']
	generate_rule_for_path(sendPath,sourceip,destip)
	sendPath = nx.shortest_path(Network, source = 'h4', target = 'h3')
	print sendPath
	sourceip=Network.node['h4']['interfaces'][0]['IP']
	destip=Network.node['h3']['interfaces'][0]['IP']
	generate_rule_for_path(sendPath,sourceip,destip)
	'''
	
"6	CHAR	0
	if path <> nx.shortest_path(Network, source=src, target=tgt):
	
"7	CHAR	0
		for path in paths:
			print path
			
		
"8	CHAR	0
	
	#----------Query for stats at t2----------#
	
		for nodes in Network.nodes():
	        	if Network.node[nodes]['DPID'] is not None:
	                	for i,interface in enumerate(Network.node[nodes]['interfaces']):
	                        	P =  Network.node[nodes]['interfaces'][i]['Port']
					L = Network.node[nodes]['interfaces'][i]['link']
	                        	if (P <> 'local') and (L in interswitchLinks):
	                                        command = "curl http://%s/wm/statistics/bandwidth/'%s'/'%s'/json" % (controllerIp, Network.node[nodes]['DPID'],P)
	                                        result=os.popen(command).read()
	                                        parsedResult = json.loads(result)
	                                        for result in parsedResult:
							if (result['port'] == P):
								Bandwidth_t2[result['dpid']+result['port']] = int(result['bits-per-second-tx'])+int(result['bits-per-second-rx'])
	
	#----------Calculate Bandwidth Difference----------#
	
		for nodes in Network.nodes():
	                if Network.node[nodes]['DPID'] is not None:
	                        for i,interface in enumerate(Network.node[nodes]['interfaces']):
	                                P =  Network.node[nodes]['interfaces'][i]['Port']
					L = Network.node[nodes]['interfaces'][i]['link']
	                                if (P <> 'local') and (L in interswitchLinks):
	                                	BandwidthUsage[Network.node[nodes]['DPID']+P] = Bandwidth_t2[Network.node[nodes]['DPID']+P] - Bandwidth_t1[Network.node[nodes]['DPID']+P]
	
	#	print BandwidthUsage	
		
	
"9	CHAR	0
	for d in dpids:
		command = "curl -s http://%s/wm/core/switch/'%s'/flow/json" % (controllerIp,d)
		result=os.popen(command).read()
		parsedResult = json.loads(result)
		for nodes in Network.nodes():
	        	if Network.node[nodes]['DPID'] == d:
	                        for i,interface in enumerate(Network.node[nodes]['interfaces']):
	                                ip=Network.node[nodes]['interfaces'][i]['IP']
	                                for flows in parsedResult['flows']:
	                			if (flows['priority'] <>'2'):
	                        			hostIp=flows['match']['ipv4_src']
							if (hostIp[:-2] == ip[:-2]):
	                                			I = {'name:':nodes,
								      'host':hostIp,
								      'dipd': d}	
								switchHosts.append(I)
								break
		
"-	CHAR	0
	 

# File marks:
'0  181  10  ~/myapp.py
'1  270  0  ~/myapp.py
'2  1  0  ~/bw.py
'3  29  2  ~/bw.py
'4  198  0  ~/myapp.py
'5  174  6  ~/myapp.py
'6  248  28  ~/myapp.py
'7  248  12  ~/myapp.py
'8  248  43  ~/myapp.py
'9  248  59  ~/myapp.py

# Jumplist (newest first):
-'  181  10  ~/myapp.py
-'  1  0  ~/myapp.py
-'  270  0  ~/myapp.py
-'  1  0  ~/bw.py
-'  29  2  ~/bw.py
-'  198  0  ~/myapp.py
-'  174  6  ~/myapp.py
-'  248  28  ~/myapp.py
-'  218  0  ~/myapp.py
-'  1  0  ~/result.txt
-'  48  47  ~/result.txt
-'  49  0  ~/result.txt
-'  268  0  ~/myapp.py
-'  269  0  ~/myapp.py
-'  16  2  ~/bw.py
-'  250  0  ~/myapp.py
-'  203  0  ~/myapp.py
-'  267  47  ~/myapp.py
-'  183  16  ~/myapp.py
-'  261  44  ~/myapp.py
-'  264  38  ~/myapp.py
-'  235  0  ~/myapp.py
-'  223  6  ~/myapp.py
-'  265  87  ~/myapp.py
-'  219  9  ~/myapp.py
-'  237  0  ~/myapp.py
-'  167  122  ~/myapp.py
-'  184  23  ~/myapp.py
-'  173  26  ~/myapp.py
-'  165  58  ~/myapp.py
-'  177  66  ~/myapp.py
-'  176  0  ~/myapp.py
-'  138  15  ~/myapp.py
-'  166  84  ~/myapp.py
-'  155  6  ~/myapp.py
-'  163  6  ~/myapp.py
-'  154  45  ~/myapp.py
-'  136  53  ~/myapp.py
-'  160  0  ~/myapp.py
-'  159  47  ~/myapp.py
-'  129  0  ~/myapp.py
-'  157  34  ~/myapp.py
-'  158  26  ~/myapp.py
-'  156  14  ~/myapp.py
-'  236  39  ~/myapp.py
-'  98  15  ~/myapp.py
-'  2  0  ~/myapp.py
-'  131  7  ~/myapp.py
-'  271  2  ~/myapp.py
-'  242  0  ~/myapp.py
-'  130  0  ~/myapp.py
-'  12  15  ~/myapp.py
-'  340  7  ~/topology.xml
-'  1  0  ~/topology.xml
-'  249  0  ~/myapp.py
-'  115  0  ~/myapp.py
-'  1  0  ~/m
-'  208  0  ~/myapp.py
-'  231  21  ~/myapp.py
-'  206  22  ~/myapp.py
-'  224  24  ~/myapp.py
-'  204  25  ~/myapp.py
-'  260  61  ~/myapp.py
-'  259  50  ~/myapp.py
-'  549  7  ~/topology.xml
-'  823  7  ~/topology.xml
-'  257  25  ~/myapp.py
-'  126  40  ~/myapp.py
-'  120  65  ~/myapp.py
-'  258  61  ~/myapp.py
-'  255  80  ~/myapp.py
-'  125  65  ~/myapp.py
-'  222  0  ~/myapp.py
-'  7  8  ~/myapp.py
-'  233  86  ~/myapp.py
-'  239  0  ~/myapp.py
-'  215  52  ~/myapp.py
-'  232  42  ~/myapp.py
-'  229  63  ~/myapp.py
-'  227  21  ~/myapp.py
-'  220  21  ~/myapp.py
-'  230  15  ~/myapp.py
-'  210  71  ~/myapp.py
-'  216  12  ~/myapp.py
-'  207  34  ~/myapp.py
-'  205  54  ~/myapp.py
-'  212  53  ~/myapp.py
-'  211  33  ~/myapp.py
-'  221  24  ~/myapp.py
-'  26  34  ~/myapp.py
-'  22  3  ~/myapp.py
-'  22  0  ~/path.py
-'  1  0  ~/path.py
-'  282  38  ~/myapp.py
-'  238  0  ~/myapp.py
-'  226  6  ~/myapp.py
-'  286  2  ~/myapp.py

# History of marks within files (newest to oldest):

> ~/myapp.py
	"	181	10
	^	181	11
	.	199	24
	+	268	6
	+	233	0
	+	234	0
	+	235	0
	+	250	0
	+	269	14
	+	266	0
	+	262	0
	+	168	0
	+	156	0
	+	203	14
	+	238	0
	+	177	64
	+	177	64
	+	178	2
	+	179	3
	+	180	3
	+	181	24
	+	183	16
	+	268	0
	+	267	22
	+	250	2
	+	250	2
	+	152	111
	+	141	1
	+	142	8
	+	143	16
	+	144	24
	+	145	24
	+	152	181
	+	250	58
	+	250	58
	+	251	0
	+	267	6
	+	268	0
	+	188	17
	+	248	26
	+	270	2
	+	248	0
	+	248	0
	+	248	7
	+	248	8
	+	248	8
	+	248	10
	+	248	16
	+	248	23
	+	248	16
	+	248	10
	+	248	8
	+	248	59
	+	248	43
	+	248	14
	+	248	8
	+	248	3
	+	248	41
	+	248	8
	+	248	3
	+	248	43
	+	248	15
	+	248	16
	+	248	12
	+	248	7
	+	248	14
	+	248	0
	+	248	17
	+	248	28
	+	248	8
	+	248	16
	+	248	24
	+	248	9
	+	248	17
	+	248	25
	+	248	3
	+	248	21
	+	248	78
	+	248	27
	+	248	26
	+	196	100
	+	189	0
	+	190	8
	+	191	8
	+	192	8
	+	193	8
	+	194	16
	+	194	56
	+	195	24
	+	196	32
	+	197	24
	+	198	2
	+	198	2
	+	234	0
	+	199	14
	+	195	0
	+	196	32
	+	197	5
	+	199	0
	+	198	0
	+	249	0
	+	270	0
	+	199	24
	e	240	0

> ~/bw.py
	"	1	0
	^	29	3
	.	29	0
	+	16	3
	+	29	0

> ~/result.txt
	"	1	0
	^	48	48
	.	48	25
	+	23	38
	+	3	0
	+	1	57
	+	27	11
	+	48	25

> ~/topology.xml
	"	340	7
	^	340	8
	.	340	0
	+	1778	0
	+	1569	0
	+	1306	0
	+	1032	0
	+	823	0
	+	549	0
	+	340	0

> ~/m
	"	1	0

> ~/path.py
	"	22	0
	^	22	0
	.	21	28
	+	13	44
	+	14	0
	+	13	31
	+	21	28

> ~/test.py
	"	1	0
	^	27	15
	.	27	14
	+	1	9
	+	13	0
	+	14	31
	+	16	20
	+	17	20
	+	22	26
	+	19	26
	+	20	24
	+	21	23
	+	22	23
	+	13	0
	+	12	17
	+	26	26
	+	23	44
	+	14	15
	+	15	7
	+	16	7
	+	17	7
	+	19	15
	+	20	14
	+	21	14
	+	22	14
	+	23	18
	+	24	14
	+	25	14
	+	26	14
	+	23	52
	+	24	32
	+	25	31
	+	26	50
	+	27	14

> ~/t
	"	1	0

> ~/to
	"	1	0

> ~/read.py
	"	3	35
	^	3	36
	.	3	35
	+	15	0
	+	4	30
	+	5	32
	+	6	0
	+	6	0
	+	7	15
	+	14	23
	+	8	22
	+	14	0
	+	8	6
	+	14	9
	+	8	8
	+	14	22
	+	12	30
	+	9	25
	+	14	2
	+	11	33
	+	12	31
	+	11	34
	+	11	50
	+	12	33
	+	13	33
	+	2	0
	+	5	0
	+	6	0
	+	9	9
	+	9	2
	+	11	2
	+	11	38
	+	12	4
	+	13	4
	+	9	2
	+	11	2
	+	11	37
	+	12	3
	+	13	4
	+	11	67
	+	10	19
	+	11	2
	+	12	0
	+	10	21
	+	11	0
	+	10	19
	+	3	35
	a	3	0
