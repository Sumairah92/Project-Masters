# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~Msle0~/\<result\>

# Command Line History (newest to oldest):
:wq!
:185
:267
:q!
:229
:250
:258
:150
:225
:209
:251
:260
:160
:200
:235
:240
:152
:159
:145
:149
:`149
:130
:140
:259
:190
:195
:196
:278
:222
:254
:100
:263
:256
:230
:236
:246
:129
:247
:237
:232
:90
:70
:50
:238
:0
:228
:215
:22
:217
:224

# Search String History (newest to oldest):
? \<result\>
? \<pathBW\>
? \<print\>
?/link-0
?//link-0

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
""1	CHAR	0
		if paths[0] <> nx.shortest_path(Network, source=src, target=tgt):
			prev_path = len(paths[0])
			idx = 0
			sendpath = paths[0]
		else:
			prev_path = len(paths[1])
			idx = 1
			sendpath = paths[1]
		for num,path in enumerate(paths):
	#		if path <> nx.shortest_path(Network, source=src, target=tgt):
			if (len(path) < prev_path and pathBW[num] >= (0.99*pathBW[idx])):
				sendpath = path
				idx = num
				prev_path = len(path)
	
"2	CHAR	0
				else:
					flow = {
						'switch':dpid,
						"name":"flow_" + str(count),
						"cookie":"0",
						"priority":"3",
						"eth_type":"0x0800",
						"ipv4_src":sourceIP,
						"ipv4_dst":destIP,
						 "idle_timeout":"30",
						"active":"true",
						"actions":"set_eth_src="+ethsrc+",set_eth_dst="+ethdst+",output="+port                                                                                     
						}
					count += 1
					flowList.append(flow)
	
"3	CHAR	0
					for s in switchHostsFlows:
						command = "curl -s http://%s/wm/staticflowpusher/list/'%s'/json" % (controllerIp,s['dpid'])
						result=os.popen(command).read()
						parsedResult = json.loads(result)
						for flows in parsedResult[s['dpid']]:
							for f in flows:
								if (flows[f]['priority'] =='3'):
									if ((flows[f]['match']['ipv4_src'] == sourceIP) and (flows[f]['match']['ipv4_dst'] == destIP) and flows[f]['actions']['actions'] == "set_eth_src="+ethsrc+",set_eth_dst="+ethdst+",output="+port):
										print "matches previous"					                                                				    
									elif ((flows[f]['match']['ipv4_src'] == sourceIP) and (flows[f]['match']['ipv4_dst'] == destIP)):
										todelete.append(f)
	
"4	CHAR	0
	'''
		for s in switchHostsFlows:
			command = "curl -s http://%s/wm/core/switch/'%s'/flow/json" % (controllerIp,s['dpid'])
			result=os.popen(command).read()
	                parsedResult = json.loads(result)
			for flows in parsedResult['flows']:
	                        if (flows['priority'] =='3'):
	                                if ((flows['match']['ipv4_src'] == sourceIP) and (flows['match']['ipv4_dst'] == destIP)):
						return
	'
"5	CHAR	0
	for s in switchHostsFlows:
		command = "curl -s http://%s/wm/staticflowpusher/list/'%s'/json" % (controllerIp,s['dpid'])
	       	result=os.popen(command).read()
	        parsedResult = json.loads(result)
	        for flows in parsedResult[s['dpid']]:
			for f in flows:
				#print flows[f]['priority']
	        		if (flows[f]['priority'] =='3'):
	                		if ((flows[f]['match']['ipv4_src'] == sourceIP) and (flows[f]['match']['ipv4_dst'] == destIP)):
	 
"6	CHAR	0
	for i,f in enumerate(flows):
				print f[i]['outPort']
	
"7	CHAR	0
	'''
	#----------Query for stats at t1----------#
	
		for nodes in Network.nodes():
			if Network.node[nodes]['DPID'] is not None:
	        		for i,interface in enumerate(Network.node[nodes]['interfaces']):
	                		P =  Network.node[nodes]['interfaces'][i]['Port']
					L = Network.node[nodes]['interfaces'][i]['link']
					if (P <> 'local') and (L in interswitchLinks):
	                			command = "curl http://%s/wm/statistics/bandwidth/'%s'/'%s'/json" % (controllerIp, Network.node[nodes]['DPID'],P)
	                			result=os.popen(command).read()
	                			parsedResult = json.loads(result)
	                			for result in parsedResult:
							if (result['port'] == P):
								Bandwidth_t1[result['dpid']+result['port']] = 100000000-(int(result['bits-per-second-tx'])+int(result['bits-per-second-rx']))
	'''
	
"8	CHAR	0
	#calculate_bandwidth_for_paths('h3','h4')
	'''
	paths = list(nx.all_simple_paths(Network, source='h1', target='h2'))
	print len(paths)
	sourceip=Network.node['h2']['interfaces'][0]['IP']
	destip=Network.node['h3']['interfaces'][0]['IP']
	generate_rule_for_path(sendPath,sourceip,destip)
	sendPath = nx.shortest_path(Network, source = 'h4', target = 'h3')
	print sendPath
	sourceip=Network.node['h4']['interfaces'][0]['IP']
	destip=Network.node['h3']['interfaces'][0]['IP']
	generate_rule_for_path(sendPath,sourceip,destip)
	'''
	
"9	CHAR	0
	if path <> nx.shortest_path(Network, source=src, target=tgt):
	
"-	CHAR	0
	 

# File marks:
'0  236  24  ~/new.py
'1  275  29  ~/new.py
'2  185  52  ~/new.py
'3  288  19  ~/new.py
'4  199  0  ~/myapp.py
'5  190  17  ~/myapp.py
'6  315  13  ~/myapp.py
'7  184  51  ~/myapp.py
'8  276  4  ~/new.py
'9  254  0  ~/new.py

# Jumplist (newest first):
-'  236  24  ~/new.py
-'  1  0  ~/new.py
-'  275  29  ~/new.py
-'  185  52  ~/new.py
-'  288  19  ~/new.py
-'  199  0  ~/myapp.py
-'  1  0  ~/myapp.py
-'  190  17  ~/myapp.py
-'  315  13  ~/myapp.py
-'  184  51  ~/myapp.py
-'  276  4  ~/new.py
-'  254  0  ~/new.py
-'  1  0  ~/n
-'  228  6  ~/new.py
-'  286  5  ~/new.py
-'  265  7  ~/new.py
-'  227  29  ~/myapp.py
-'  267  71  ~/myapp.py
-'  285  13  ~/myapp.py
-'  224  0  ~/myapp.py
-'  279  2  ~/myapp.py
-'  203  0  ~/myapp.py
-'  223  0  ~/myapp.py
-'  234  48  ~/myapp.py
-'  235  14  ~/myapp.py
-'  232  43  ~/myapp.py
-'  275  21  ~/myapp.py
-'  250  11  ~/myapp.py
-'  239  7  ~/myapp.py
-'  251  10  ~/myapp.py
-'  316  0  ~/myapp.py
-'  284  23  ~/myapp.py
-'  188  10  ~/myapp.py
-'  1  0  ~/bw.py
-'  29  2  ~/bw.py
-'  208  0  ~/myapp.py
-'  175  6  ~/myapp.py
-'  293  28  ~/myapp.py
-'  241  0  ~/myapp.py
-'  1  0  ~/result.txt
-'  48  47  ~/result.txt
-'  49  0  ~/result.txt
-'  313  0  ~/myapp.py
-'  16  2  ~/bw.py
-'  295  0  ~/myapp.py
-'  214  0  ~/myapp.py
-'  312  47  ~/myapp.py
-'  192  16  ~/myapp.py
-'  306  44  ~/myapp.py
-'  309  38  ~/myapp.py
-'  280  0  ~/myapp.py
-'  246  6  ~/myapp.py
-'  310  87  ~/myapp.py
-'  242  9  ~/myapp.py
-'  282  0  ~/myapp.py
-'  167  122  ~/myapp.py
-'  193  23  ~/myapp.py
-'  174  26  ~/myapp.py
-'  165  58  ~/myapp.py
-'  183  66  ~/myapp.py
-'  182  0  ~/myapp.py
-'  138  15  ~/myapp.py
-'  166  84  ~/myapp.py
-'  155  6  ~/myapp.py
-'  163  6  ~/myapp.py
-'  154  45  ~/myapp.py
-'  136  53  ~/myapp.py
-'  160  0  ~/myapp.py
-'  159  47  ~/myapp.py
-'  129  0  ~/myapp.py
-'  157  34  ~/myapp.py
-'  158  26  ~/myapp.py
-'  156  14  ~/myapp.py
-'  281  39  ~/myapp.py
-'  98  15  ~/myapp.py
-'  2  0  ~/myapp.py
-'  131  7  ~/myapp.py
-'  317  2  ~/myapp.py
-'  287  0  ~/myapp.py
-'  130  0  ~/myapp.py
-'  12  15  ~/myapp.py
-'  340  7  ~/topology.xml
-'  1  0  ~/topology.xml
-'  294  0  ~/myapp.py
-'  115  0  ~/myapp.py
-'  1  0  ~/m
-'  219  0  ~/myapp.py
-'  276  21  ~/myapp.py
-'  217  22  ~/myapp.py
-'  247  24  ~/myapp.py
-'  215  25  ~/myapp.py
-'  305  61  ~/myapp.py
-'  304  50  ~/myapp.py
-'  549  7  ~/topology.xml
-'  823  7  ~/topology.xml
-'  302  25  ~/myapp.py
-'  126  40  ~/myapp.py
-'  120  65  ~/myapp.py

# History of marks within files (newest to oldest):

> ~/new.py
	"	236	24
	^	275	30
	.	236	24
	+	228	0
	+	243	0
	+	198	1
	+	210	1
	+	286	6
	+	228	0
	+	253	0
	+	252	0
	+	254	0
	+	275	0
	+	276	0
	+	275	57
	+	276	0
	+	192	0
	+	168	4
	+	190	0
	+	288	19
	+	185	38
	+	275	30
	+	236	24

> ~/myapp.py
	"	199	0
	^	190	18
	.	190	17
	+	293	28
	+	293	8
	+	293	16
	+	293	24
	+	293	9
	+	293	17
	+	293	25
	+	293	3
	+	293	21
	+	293	78
	+	293	27
	+	293	26
	+	206	100
	+	199	0
	+	200	8
	+	201	8
	+	202	8
	+	203	8
	+	204	16
	+	204	56
	+	205	24
	+	206	32
	+	207	24
	+	208	2
	+	208	2
	+	279	0
	+	209	14
	+	205	0
	+	206	32
	+	207	5
	+	209	0
	+	208	0
	+	294	0
	+	316	0
	+	209	24
	+	198	3
	+	211	0
	+	210	3
	+	234	239
	+	227	6
	+	228	20
	+	229	20
	+	230	20
	+	231	20
	+	232	28
	+	233	36
	+	234	44
	+	234	310
	+	236	16
	+	234	178
	+	234	297
	+	237	11
	+	236	16
	+	268	21
	+	270	23
	+	271	105
	+	274	16
	+	234	177
	+	239	10
	+	240	15
	+	241	15
	+	242	11
	+	243	15
	+	244	11
	+	245	16
	+	246	11
	+	247	12
	+	248	15
	+	249	15
	+	250	15
	+	239	0
	+	253	15
	+	267	100
	+	234	239
	+	235	14
	+	272	15
	+	315	12
	+	271	54
	+	247	29
	+	262	113
	+	279	0
	+	280	0
	+	278	0
	+	227	0
	+	267	72
	+	235	32
	+	184	52
	+	314	19
	+	315	13
	+	184	51
	+	189	7
	+	184	2
	+	186	1
	+	185	22
	+	168	3
	+	179	63
	+	181	0
	+	188	3
	+	189	7
	+	190	17
	e	285	0

> ~/n
	"	1	0

> ~/bw.py
	"	1	0
	^	29	3
	.	29	0
	+	16	3
	+	29	0

> ~/result.txt
	"	1	0
	^	48	48
	.	48	25
	+	23	38
	+	3	0
	+	1	57
	+	27	11
	+	48	25

> ~/topology.xml
	"	340	7
	^	340	8
	.	340	0
	+	1778	0
	+	1569	0
	+	1306	0
	+	1032	0
	+	823	0
	+	549	0
	+	340	0

> ~/m
	"	1	0

> ~/path.py
	"	22	0
	^	22	0
	.	21	28
	+	13	44
	+	14	0
	+	13	31
	+	21	28

> ~/test.py
	"	1	0
	^	27	15
	.	27	14
	+	1	9
	+	13	0
	+	14	31
	+	16	20
	+	17	20
	+	22	26
	+	19	26
	+	20	24
	+	21	23
	+	22	23
	+	13	0
	+	12	17
	+	26	26
	+	23	44
	+	14	15
	+	15	7
	+	16	7
	+	17	7
	+	19	15
	+	20	14
	+	21	14
	+	22	14
	+	23	18
	+	24	14
	+	25	14
	+	26	14
	+	23	52
	+	24	32
	+	25	31
	+	26	50
	+	27	14

> ~/t
	"	1	0

> ~/to
	"	1	0

> ~/read.py
	"	3	35
	^	3	36
	.	3	35
	+	15	0
	+	4	30
	+	5	32
	+	6	0
	+	6	0
	+	7	15
	+	14	23
	+	8	22
	+	14	0
	+	8	6
	+	14	9
	+	8	8
	+	14	22
	+	12	30
	+	9	25
	+	14	2
	+	11	33
	+	12	31
	+	11	34
	+	11	50
	+	12	33
	+	13	33
	+	2	0
	+	5	0
	+	6	0
	+	9	9
	+	9	2
	+	11	2
	+	11	38
	+	12	4
	+	13	4
	+	9	2
	+	11	2
	+	11	37
	+	12	3
	+	13	4
	+	11	67
	+	10	19
	+	11	2
	+	12	0
	+	10	21
	+	11	0
	+	10	19
	+	3	35
	a	3	0
